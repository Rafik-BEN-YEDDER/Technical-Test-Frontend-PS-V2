{"version":3,"sources":["actions/categories.js","mocks/products.js","gateways/ProductApi.js","actions/products.js","reducers/products.js","reducers/index.js","reducers/categories.js","utils.js","components/Main/Main.js","components/Header/Header.js","components/Products/Product.js","components/Products/ProductsList.js","components/Products/ProductsContainer.js","components/NotFound/NotFound.js","components/Products/Update/validators.js","components/Products/Update/ProductForm.js","components/Products/Update/UpdateFormContainer.js","components/Products/Add/AddFormContainer.js","App.js","mocks/categories.js","gateways/CategoryApi.js","index.js"],"names":["RECEIVE_CATEGORIES","products","id","name","rating","featured","itemsInStock","receiptDate","brand","categories","expirationDate","createdAt","productApi","getProducts","RECEIVE_PRODUCTS","DELETE_PRODUCT","UPDATE_PRODUCT","CREATE_PRODUCT","updateProduct","data","type","productId","createProductForm","dispatch","getState","_ref2","history","createProduct","push","isFeatured","_ref","getProductById","find","_ref3","combineReducers","state","arguments","length","undefined","action","categoriesActions","Object","toConsumableArray","productsActions","filter","item","map","objectSpread","concat","Date","now","toString","moment","format","Main","children","react_default","a","createElement","Header","react","className","react_router_dom","to","Product","product","onDelete","Card","CardBody","CardTitle","Button","close","onClick","CardText","tag","ListGroup","ListGroupItem","category","key","ProductList","productsGroups","chunk","Container","productsGroup","index","Row","Col","sm","Products_Product","ProductsContainer","_this$props","this","props","components_Header_Header","ProductsList","deleteProduct","Component","connect","categoriesById","reduce","acc","defineProperty","getCategoriesById","NotFound","isCategoriesValid","value","ProductForm","n","_props$product","_useState","useState","_useState2","slicedToArray","setName","_useState3","_useState4","setBrand","_useState5","_useState6","setRating","_useState7","_useState8","setCategories","_useState9","_useState10","setItemsInStock","_useState11","_useState12","setReceiptDate","_useState13","_useState14","setExpirationDate","_useState15","_useState16","setFeatured","useDispatch","Form","onSubmit","e","preventDefault","onSave","FormGroup","Label","for","Input","invalid","trim","placeholder","onChange","target","FormFeedback","Array","from","keys","v","multiple","_ref4","options","selected","getMultiSelected","_ref5","_ref6","_ref7","_ref8","check","checked","_ref9","max","add","calendar","UpdateFormContainer","Fragment","Update_ProductForm","AddFormContainer","App","components_Main_Main","react_router","exact","path","component","render","match","Update_UpdateFormContainer","parseInt","params","categoryApi","getCategories","createHashHistory","deps","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","json","receiveCategories","receiveProducts","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0735be28.chunk.js","sourcesContent":["export const REQUEST_CATEGORIES = 'REQUEST_CATEGORIES';\nexport const RECEIVE_CATEGORIES = 'RECEIVE_CATEGORIES';\n\nconst requestCategories = () => ({\n  type: REQUEST_CATEGORIES,\n});\n\nconst receiveCategories = (json) => ({\n  type: RECEIVE_CATEGORIES,\n  categories: json.map(category => category),\n});\n\nexport const fetchCategories = () => (dispatch, getState, {categoryApi}) => {\n  dispatch(requestCategories());\n  const json = categoryApi.getCategories();\n  dispatch(receiveCategories(json));\n};\n","let products = [\n  {\n    id: 1,\n    name: 'TV',\n    rating: 9,\n    featured: true,\n    itemsInStock: 2,\n    receiptDate: null,\n    brand: 'JVC',\n    categories: [1, 2, 9],\n    expirationDate: null,\n    createdAt: '2019-04-30T16:00:40+03:00',\n  },\n  {\n    id: 2,\n    name: 'iPhone',\n    rating: 2,\n    featured: false,\n    itemsInStock: 0,\n    receiptDate: '2019-06-14',\n    brand: 'Apple',\n    categories: [5, 4, 3],\n    expirationDate: '2019-05-20',\n    createdAt: '2019-05-14T16:00:40+03:00',\n  },\n  {\n    id: 3,\n    name: 'laptop',\n    rating: 5,\n    featured: false,\n    itemsInStock: 10,\n    receiptDate: null,\n    brand: 'HP',\n    categories: [2],\n    expirationDate: null,\n    createdAt: '2019-05-20T16:00:40+03:00',\n  },\n];\n\nexport default products;\n","import products from '../mocks/products';\n\nclass ProductApi {\n  getProducts = () => {\n    return products;\n  }\n}\n\nexport const productApi = new ProductApi();\n","import { productApi } from '../gateways/ProductApi';\n\nexport const REQUEST_PRODUCTS = 'REQUEST_PRODUCTS';\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\nexport const CREATE_PRODUCT = 'CREATE_PRODUCT';\n\nconst requestProducts = () => ({\n  type: REQUEST_PRODUCTS,\n});\n\nexport const deleteProduct = (id) => ({\n  type: DELETE_PRODUCT,\n  productId: id,\n});\n\nexport const updateProduct = (id, data) => ({\n  type: UPDATE_PRODUCT,\n  productId: id,\n  data,\n});\n\nexport const createProduct = (data) => ({\n  type: CREATE_PRODUCT,\n  data,\n});\n\nconst receiveProducts = (json) => ({\n  type: RECEIVE_PRODUCTS,\n  products: json.map(product => product),\n});\n\nexport const fetchProducts = () => dispatch => {\n  dispatch(requestProducts());\n  const json = productApi.getProducts();\n  dispatch(receiveProducts(json));\n};\n\nexport const updateProductForm = (id, data) => (dispatch, getState, {history}) => {\n  dispatch(updateProduct(id, data));\n  history.push('/');\n}\n\nexport const createProductForm = (data) => (dispatch, getState, {history}) => {\n  dispatch(createProduct(data));\n  history.push('/');\n}\n","import * as productsActions from '../actions/products';\nimport {generateId} from '../utils';\nimport moment from 'moment';\n\nexport const isFeatured = ({rating, featured}) => rating > 8 || featured;\n\nexport function products(state = [], action) {\n  switch (action.type) {\n    case productsActions.RECEIVE_PRODUCTS:\n      return [\n        ...action.products,\n      ];\n    case productsActions.DELETE_PRODUCT:\n      return state.filter((item) => item.id !== action.productId);\n    case productsActions.UPDATE_PRODUCT:\n      return state.map((item) => {\n        if (item.id === action.productId) {\n          return {\n            ...item,\n            ...action.data,\n            featured: isFeatured(action.data)\n          }\n        }\n        return item;\n      });\n    case productsActions.CREATE_PRODUCT:\n      return state.concat([{\n        ...action.data,\n        id: generateId(),\n        featured: isFeatured(action.data),\n        createdAt: moment().format(),\n      }]);\n    default:\n      return state;\n  }\n}\n\nexport function getProductById({products}, productId) {\n  return products.find(({id}) => id === productId);\n}\n","import { combineReducers } from 'redux';\nimport { categories } from './categories';\nimport { products } from './products';\n\nexport default combineReducers({\n  categories,\n  products,\n});\n","import * as categoriesActions from '../actions/categories';\n\nexport function categories(state = [], action) {\n  switch (action.type) {\n    case categoriesActions.RECEIVE_CATEGORIES:\n      return [\n        ...action.categories,\n      ];\n    default:\n      return state;\n  }\n}\n\nexport function getCategoriesById(state) {\n  return state.categories.reduce((acc, category) => {\n    return {\n      ...acc,\n      [category.id]: category\n    }\n  }, {})\n}\n","export const repeat = (n) => Array.from(Array(n).keys());\n\nexport function getMultiSelected(target) {\n    return Array.from(target.options).reduce((acc, {selected, value}) => {\n        if (selected) {\n            acc.push(value)\n        }\n        return acc;\n    }, [])\n}\n\nconst SEC = 1000;\nconst MIN = 60 * SEC;\nconst HOUR = 60 * MIN;\nconst DAY = 24 * HOUR;\n\nexport function timestampToDays(ms) {\n    return ms / DAY;\n}\n\nexport function generateId() {\n    return Date.now().toString(10);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Main = ({ children }) => (<div>{children}</div>);\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Main;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from \"react-router-dom\";\n\nconst Header = ({name}) => (\n    <Fragment>\n        <div className='d-flex align-items-center justify-content-between'>\n            <h2 className=\"h3\">{name}</h2>\n            <Link to='/add'>Add product</Link>\n        </div>\n        <hr/>\n    </Fragment>\n);\n\nHeader.propTypes = {\n    name: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Card, CardText, CardBody, CardTitle, ListGroup, ListGroupItem, Button} from 'reactstrap';\nimport moment from 'moment'\nimport {Link} from \"react-router-dom\";\n\nconst shortDateFormat = 'MM/DD/YYYY';\nconst longDateFormat = 'MM/DD/YYYY hh:mm a';\n\n\nconst Product = ({ product, onDelete }) => {\n  const receiptDate =  product.receiptDate ? moment(product.receiptDate).format(shortDateFormat) : '-';\n  const expirationDate =  product.expirationDate ? moment(product.expirationDate).format(shortDateFormat) : '-';\n  const createdAt = product.createdAt ? moment(product.createdAt).format(longDateFormat) : '-';\n  \n  return (\n    <Card>\n      <CardBody>\n        <CardTitle>\n          <Link to={`/edit/${product.id}`}>{product.name}</Link>\n          <Button close onClick={() => onDelete(product.id)} />\n        </CardTitle>\n        <CardText tag=\"div\">\n          <ListGroup>\n            <ListGroupItem>Brand: {product.brand}</ListGroupItem>\n            <ListGroupItem>Rating: {product.rating}</ListGroupItem>\n            <ListGroupItem>Featured: {product.featured ? 'Yes' : 'No'}</ListGroupItem>\n            <ListGroupItem>Items In Stock: {product.itemsInStock}</ListGroupItem>\n            <ListGroupItem>\n              Categories:\n              <ul>\n                {product.categories.map(category => (\n                  <li key={category.id}>{category.name}</li>\n                ))}\n              </ul>\n            </ListGroupItem>\n            <ListGroupItem>Receipt Date: {receiptDate}</ListGroupItem>\n            <ListGroupItem>Expiration Date: {expirationDate}</ListGroupItem>\n            <ListGroupItem>Created At: {createdAt}</ListGroupItem>\n          </ListGroup>\n        </CardText>\n      </CardBody>\n    </Card>\n  );\n}\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Product;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Product from './Product';\nimport { Container, Row, Col } from 'reactstrap'\nimport { chunk } from 'lodash'\n\nconst ProductList = ({ products, onDelete }) => {\n  const productsGroups = chunk(products, 3)\n\n  return (\n    <Container>\n      {productsGroups.map((productsGroup, index) => (\n        <Row key={index} className=\"mb-5\">\n          {productsGroup.map(product => (\n            <Col sm=\"4\" key={product.id} >\n              <Product product={product} onDelete={onDelete} />\n            </Col>\n          ))}\n        </Row>\n      ))}\n    </Container>\n  );\n};\n\nProductList.propTypes = {\n  products: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ProductList;\n","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../Header/Header';\nimport ProductsList from './ProductsList';\nimport {deleteProduct} from '../../actions/products';\nimport {getCategoriesById} from '../../reducers/categories';\n\nclass ProductsContainer extends Component {\n  render() {\n    const { products, dispatch } = this.props;\n\n    return (\n      <Fragment>\n        <Header name=\"Products\"/>\n        <ProductsList products={products} onDelete={(id) => dispatch(deleteProduct(id))} />\n      </Fragment>\n    );\n  }\n}\n\nProductsContainer.propTypes = {\n  products: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const categoriesById = getCategoriesById(state);\n\n  const products = state.products.map(product => {\n    const categories =  product.categories.map(id => categoriesById[id])\n\n    return {\n      ...product,\n      categories\n    };\n  });\n\n  return {\n    products,\n  }\n};\n\nexport default connect(mapStateToProps)(ProductsContainer);\n","import React from 'react';\n\nconst NotFound = () => (<h1>Not Found</h1>);\n\nexport default NotFound;\n","\nexport const isNameValid = (value) => {\n\treturn value.trim().length > 0 && value.trim().length <= 200;\n};\n\nexport const isCategoriesValid = (value) => {\n\treturn value.length > 0 && value.length <= 5;\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Form, FormFeedback, FormGroup, Input, Label} from 'reactstrap';\nimport {getMultiSelected, repeat} from '../../../utils';\nimport {isCategoriesValid, isNameValid} from './validators';\nimport { useDispatch } from \"react-redux\";\nimport {updateProduct,createProductForm } from '../../../actions/products'\nimport {Link} from 'react-router-dom';\nimport moment from 'moment'\nconst ProductForm = (props) => {\n    const {product = {}} = props;\n    const [name, setName] = useState(product.name || '');\n    const [brand, setBrand] = useState(product.brand || '');\n    const [rating, setRating] = useState(product.rating || 0);\n    const [categories, setCategories] = useState(product.categories || []);\n    const [itemsInStock, setItemsInStock] = useState(product.itemsInStock || 0);\n    const [receiptDate, setReceiptDate] = useState(product.receiptDate || '');\n    const [expirationDate, setExpirationDate] = useState(product.expirationDate || '');\n    const [featured, setFeatured] = useState(product.featured);\n\n    const dispatch = useDispatch();\n    const onSubmit = (e) => {\n        e.preventDefault();\n        props.onSave({\n            name,\n            brand,\n            rating,\n            categories,\n            itemsInStock,\n            receiptDate,\n            expirationDate,\n            featured,\n        });\n    }\n    return (\n        <Form onSubmit={onSubmit}>\n            <FormGroup>\n                <Label for='name'>Name</Label>\n                <Input\n                    invalid={!isNameValid(name)}\n                    type='text'\n                    name='name'\n                    id='name'\n                    placeholder='Name'\n                    value={name}\n                    onChange={({target}) => setName(target.value)}\n                />\n                <FormFeedback>Name is required, the length must not be greater than 200</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n                <Label for='brand'>Brand</Label>\n                <Input\n                    type='text'\n                    name='brand'\n                    id='brand'\n                    placeholder='Brand'\n                    value={brand}\n                    onChange={({target}) => setBrand(target.value)}\n                />\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"rating\">Rating</Label>\n                <Input\n                    type=\"select\"\n                    name=\"rating\"\n                    id=\"rating\"\n                    value={rating}\n                    onChange={({target}) => setRating(target.value)}\n                >\n                    {repeat(11).map((v) => (\n                        <option key={v} value={v}>{v}</option>\n                    ))}\n                </Input>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"categories\">Categories</Label>\n                <Input\n                    invalid={!isCategoriesValid(categories)}\n                    type=\"select\"\n                    name=\"categories\"\n                    id=\"categories\"\n                    multiple\n                    value={categories}\n                    onChange={({target}) => setCategories(getMultiSelected(target))}\n                >\n                    {props.categories.map(({id, name}) => (\n                        <option key={id} value={id}>{name}</option>\n                    ))}\n                </Input>\n                <FormFeedback>A product must have from 1 to 5 categories</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"itemsInStock\">Items In Stock</Label>\n                <Input type=\"number\" name=\"itemsInStock\" id=\"itemsInStock\" value={itemsInStock}\n                       onChange={({target}) => setItemsInStock(target.value)}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label for=\"expirationDate\">Expiration date</Label>\n                <Input\n                    type=\"date\"\n                    name=\"expirationDate\"\n                    id=\"expirationDate\"\n                    value={expirationDate}\n                    onChange={({target}) => setExpirationDate(target.value)}\n                />\n                <FormFeedback>If a product has an expiration date it must expire not less than 30 days since\n                    now</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"receiptDate\">Receipt date</Label>\n                <Input type=\"date\" name=\"receiptDate\" id=\"receiptDate\" value={receiptDate}\n                       onChange={({target}) => setReceiptDate(target.value)}\n                />\n            </FormGroup>\n            <FormGroup check>\n                <Label check>\n                    <Input type=\"checkbox\" checked={rating > 8 ? true : false}\n                           onChange={({target}) => setFeatured(target.checked)}\n                    />{' '}\n                    Featured\n                </Label>\n            </FormGroup>\n            <Link to='/'><Button onClick={()=>\n            product.id? dispatch(updateProduct(product.id,{\n    \n    name: name,\n    rating: rating,\n    featured: featured,\n    itemsInStock: itemsInStock,\n    receiptDate: receiptDate,\n    brand: brand,\n    categories: categories,\n    expirationDate: expirationDate === '' ? '' : moment.max(moment().add(30, 'days'),moment(expirationDate)).calendar(),\n    \n  })):\n  dispatch(createProductForm ({\n    \n    name: name,\n    rating: rating,\n    featured: featured,\n    itemsInStock: itemsInStock,\n    receiptDate: receiptDate,\n    brand: brand,\n    categories: categories,\n    expirationDate: expirationDate === '' ? '' : moment.max(moment().add(30, 'days'),moment(expirationDate)).calendar(),\n    \n  }))}>Submit</Button></Link>\n        </Form>\n    );\n}\n\nProductForm.propTypes = {\n    product: PropTypes.object,\n    categories: PropTypes.array.isRequired,\n    onSave: PropTypes.func.isRequired,\n};\n\nexport default ProductForm;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getProductById} from '../../../reducers/products';\nimport ProductForm from './ProductForm';\nimport {Link} from 'react-router-dom';\n\nclass UpdateFormContainer extends Component {\n    render() {\n        const {product, categories} = this.props;\n\n        if (!product) {\n            return null;\n        }\n\n        return (\n            <>\n                <Link to='/'>Home</Link>\n                <ProductForm\n                    onSave={(data) => {return}}\n                    product={product}\n                    categories={categories}\n                />\n            </>\n        );\n    }\n}\n\nUpdateFormContainer.propTypes = {\n    product: PropTypes.object,\n    categories: PropTypes.array,\n    history: PropTypes.object,\n};\n\nconst mapStateToProps = (state, {productId}) => {\n    return {\n        product: getProductById(state, productId),\n        categories: state.categories,\n    }\n};\n\nexport default connect(mapStateToProps)(UpdateFormContainer);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport ProductForm from '../Update/ProductForm';\n\n\nclass AddFormContainer extends Component {\n    render() {\n        const {categories} = this.props;\n\n        return (\n            <>\n                <Link to='/'>Home</Link>\n                <ProductForm\n                    onSave={(data) => {return;}}\n                    categories={categories}\n                />\n            </>\n        );\n    }\n}\n\nAddFormContainer.propTypes = {\n    categories: PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        categories: state.categories,\n    }\n};\n\nexport default connect(mapStateToProps)(AddFormContainer);\n","import React, {Component} from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport Main from './components/Main/Main'\nimport ProductsContainer from './components/Products/ProductsContainer'\nimport NotFound from './components/NotFound/NotFound'\nimport UpdateFormContainer from './components/Products/Update/UpdateFormContainer';\nimport AddFormContainer from './components/Products/Add/AddFormContainer';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Main>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={ProductsContainer}/>,\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/edit/:productId\"\n\t\t\t\t\t\trender={({match}) => (<UpdateFormContainer productId={parseInt(match.params.productId)}/>)}\n\t\t\t\t\t/>,\n\t\t\t\t\t<Route path=\"/add\" component={AddFormContainer}/>,\n\t\t\t\t\t<Route path=\"*\" component={NotFound}/>,\n\t\t\t\t</Switch>\n\t\t\t\t\n\t\t\t</Main>\n\t\t)\n\t}\n}\n\nexport default App;\n","const categories = [\n  {\n    id: 1,\n    name: 'TV & Home Cinema',\n  },\n  {\n    id: 2,\n    name: 'Laptops',\n  },\n  {\n    id: 3,\n    name: 'Watches',\n  },\n  {\n    id: 4,\n    name: 'Headphones',\n  },\n  {\n    id: 5,\n    name: 'Phones',\n  },\n  {\n    id: 6,\n    name: 'Desktops',\n  },\n  {\n    id: 7,\n    name: 'Monitors',\n  },\n  {\n    id: 8,\n    name: 'Printers',\n  },\n  {\n    id: 9,\n    name: 'Monitors',\n  },\n  {\n    id: 10,\n    name: 'Camera & Photo',\n  },\n  {\n    id: 11,\n    name: 'Audio & HiFi',\n  },\n];\n\nexport default categories;\n","import categories from '../mocks/categories';\n\nclass CategoryApi {\n  getCategories = () => {\n    return categories;\n  }\n}\n\nexport const categoryApi = new CategoryApi();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport reducers from './reducers';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport {fetchCategories} from './actions/categories';\nimport {fetchProducts} from './actions/products';\nimport {createHashHistory} from 'history';\nimport {Router} from 'react-router-dom';\nimport {categoryApi} from './gateways/CategoryApi';\n\nconst history = createHashHistory();\nconst deps = {history, categoryApi};\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk.withExtraArgument(deps))));\nstore.dispatch(fetchCategories());\nstore.dispatch(fetchProducts());\n\nReactDOM.render(\n\t<div className=\"content\">\n\t\t<div className=\"container\">\n\t\t\t<Provider store={store}>\n\t\t\t\t<Router history={history}>\n\t\t\t\t\t<App/>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t</div>\n\t</div>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}